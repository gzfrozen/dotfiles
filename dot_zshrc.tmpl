# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi
# source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Starship
eval "$(starship init zsh)"

# zsh auto-completion
autoload -Uz compinit
compinit

# GPG Agent
export GPG_TTY=$(tty)
gpgconf --launch gpg-agent

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# bun completions
[ -s "/Users/liux101/.bun/_bun" ] && source "/Users/liux101/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# rust
source ~/.cargo/bin

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/liux101/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/liux101/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/liux101/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/liux101/google-cloud-sdk/completion.zsh.inc'; fi

# Kubectl
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)
alias k=kubectl
alias kn="kubectl config set-context --current --namespace"

# Terraform
alias t=terraform
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform

# Vim mode
bindkey -v
bindkey -M viins jj vi-cmd-mode
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Default editor
export EDITOR=nvim
export VISUAL="$EDITOR"
alias nv=nvim
alias nvimdiff="nvim -d"

# fzf
source <(fzf --zsh)

# zoxide
eval "$(zoxide init --cmd cd zsh)"

# eza
export FPATH="/opt/homebrew/share/zsh/site-functions:$FPATH"
alias ls="eza --icons --hyperlink --group-directories-first"
alias ll="eza --icons --hyperlink --group-directories-first -l -h --git"

# bat
alias cat='bat --color=always'

# The fuck
eval $(thefuck --alias)

# yazi
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Lazygit
alias lg=lazygit

# Bitwarden SSH Agent
export SSH_AUTH_SOCK=/Users/{{ .chezmoi.username }}/Library/Containers/com.bitwarden.desktop/Data/.bitwarden-ssh-agent.sock

# Gemini developer api key
export GEMINI_API_KEY={{ (bitwarden "item" "gemini_api_key").notes }}

# Tavily seach api key
export TAVILY_API_KEY={{ (bitwarden "item" "tavily_api_key").notes }}

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/{{ .chezmoi.username }}/.lmstudio/bin"

# The following lines have been added by Docker Desktop to enable Docker CLI completions.
fpath=(/Users/liux101/.docker/completions $fpath)
autoload -Uz compinit
compinit
# End of Docker CLI completions
